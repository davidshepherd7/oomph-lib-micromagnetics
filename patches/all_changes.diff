Index: /home/david/oomph-lib/trunk/src/generic/shape.h
===================================================================
--- /home/david/oomph-lib/trunk/src/generic/shape.h	(revision 253)
+++ /home/david/oomph-lib/trunk/src/generic/shape.h	(working copy)
@@ -130,9 +130,20 @@
  Shape(const unsigned &N, const unsigned &M) : Index1(N), Index2(M) 
   {Allocated_storage = new double[N*M]; Psi = Allocated_storage;}
 
- /// Broken copy constructor
- Shape(const Shape &shape) {BrokenCopy::broken_copy("Shape");}
+  /// Default constructor to allow vectors of Shapes
+  Shape() {}
 
+  /// Deep copy constructor
+  //??ds added by me, this is probably a bad thing to have in final oomph-lib
+  //code but it is needed to use vector.push_back with Shapes.
+  Shape(const Shape &shape) : Index1(shape.Index1), Index2(shape.Index2)
+  {
+    Allocated_storage = new double[Index1*Index2];
+    Psi = Allocated_storage;
+    for(unsigned i=0; i<Index1*Index2; i++)
+      Psi[i] = shape.Psi[i];
+  }
+
  /// The assignment operator does a shallow copy 
  /// (resets the pointer to the data)
  void operator=(const Shape &shape)
@@ -181,7 +192,8 @@
   }
 
  /// Destructor, clear up the memory allocated by the object
- ~Shape() {delete[] Allocated_storage; Allocated_storage=0;}
+  ~Shape()
+  {delete[] Allocated_storage; Allocated_storage=0;}
 
  /// Overload the bracket operator to provide access to values.
  inline double & operator[](const unsigned &i) 
Index: /home/david/oomph-lib/trunk/src/generic/Makefile.am
===================================================================
--- /home/david/oomph-lib/trunk/src/generic/Makefile.am	(revision 253)
+++ /home/david/oomph-lib/trunk/src/generic/Makefile.am	(working copy)
@@ -139,8 +139,11 @@
 
 # Need to worry about these for dependency but they shouldn't
 # be included into the include directory
-extra_headers = cfortran.h frontal.h arpack.h lapack_qz.h mumps.h
+extra_headers = frontal.h arpack.h lapack_qz.h mumps.h
 
+# Need fortran wrappers accesable from driver codes so add them to the nomal headers list (instead of "extra headers")
+headers += cfortran.h
+
 # Define name of library 
 libname = generic
 
Index: /home/david/oomph-lib/trunk/src/generic/elements.h
===================================================================
--- /home/david/oomph-lib/trunk/src/generic/elements.h	(revision 253)
+++ /home/david/oomph-lib/trunk/src/generic/elements.h	(working copy)
@@ -1107,7 +1107,7 @@
   private:
 
  /// Pointer to the spatial integration scheme
- Integral* Integral_pt;
+  Vector<Integral*> Integral_pt;
  
  /// Storage for pointers to the nodes in the element
  Node** Node_pt;
@@ -1221,7 +1221,7 @@
 
  /// \short Return the local equation number corresponding to the i-th
  /// value at the n-th local node.
- inline int nodal_local_eqn(const unsigned &n, const unsigned &i)
+  inline int nodal_local_eqn(const unsigned &n, const unsigned &i) const
   {
 #ifdef RANGE_CHECKING
    if(n >= Nnode)
@@ -1569,7 +1569,7 @@
  static bool Suppress_output_while_checking_for_inverted_elements;
 
  /// Constructor
- FiniteElement() : GeneralisedElement(), Integral_pt(0), 
+ FiniteElement() : GeneralisedElement(), Integral_pt(1),
   Node_pt(0), Nodal_local_eqn(0), Nnode(0),
   Elemental_dimension(0), Nodal_dimension(0), Nnodal_position_type(1),
   Macro_elem_pt(0) {}
@@ -1722,8 +1722,15 @@
  virtual void set_integration_scheme(Integral* const &integral_pt); 
 
  /// Return the pointer to the integration scheme (const version)
- Integral* const &integral_pt() const {return Integral_pt;}
+  Integral* const &integral_pt() const {return Integral_pt[0];}
  
+  ///Set the n'th spatial integration scheme
+  virtual void set_integration_scheme(Integral* const &integral_pt, const unsigned &n)
+  {Integral_pt[n] = integral_pt;}
+
+  /// Return the pointer to the n'th integration scheme
+  Integral* const &integral_pt(unsigned n) const {return Integral_pt[n];}
+
  /// \short Calculate the geometric shape functions 
  /// at local coordinate s. This function must be overloaded for each specific 
  /// geometric element.
Index: /home/david/oomph-lib/trunk/src/generic/elements.cc
===================================================================
--- /home/david/oomph-lib/trunk/src/generic/elements.cc	(revision 253)
+++ /home/david/oomph-lib/trunk/src/generic/elements.cc	(working copy)
@@ -2811,7 +2811,7 @@
  void FiniteElement::set_integration_scheme(Integral* const &integral_pt) 
  {
   //Assign the integration scheme
-  Integral_pt = integral_pt;
+  Integral_pt[0] = integral_pt;
  }
 
 //=========================================================================
@@ -4828,9 +4828,7 @@
  
     //Calculate all derivatives of the spatial coordinates wrt 
     //local coordinates
-    DenseMatrix<double> interpolated_dxds(1,spatial_dim);
-    //Initialise to zero
-    for(unsigned i=0;i<spatial_dim;i++) {interpolated_dxds(0,i) = 0.0;}
+    DenseMatrix<double> interpolated_dxds(1,spatial_dim,0.0);
     
     //Loop over all parent nodes
     for(unsigned l=0;l<n_node_bulk;l++)
@@ -4881,10 +4879,7 @@
  
     //Calculate all derivatives of the spatial coordinates 
     //wrt local coordinates
-    DenseMatrix<double> interpolated_dxds(2,spatial_dim);
-    //Initialise to zero
-    for(unsigned j=0;j<2;j++)
-     {for(unsigned i=0;i<spatial_dim;i++) {interpolated_dxds(j,i) = 0.0;}}
+    DenseMatrix<double> interpolated_dxds(2,spatial_dim,0.0);
     
     //Loop over all parent nodes
     for(unsigned l=0;l<n_node_bulk;l++)
@@ -4988,10 +4983,7 @@
  
     //Calculate all derivatives of the spatial coordinates 
     //wrt local coordinates
-    DenseMatrix<double> interpolated_dxds(2,3);
-    //Initialise to zero
-    for(unsigned j=0;j<2;j++)
-     {for(unsigned i=0;i<3;i++) {interpolated_dxds(j,i) = 0.0;}}
+    DenseMatrix<double> interpolated_dxds(2,3,0.0);
     
     //Loop over all nodes
     for(unsigned l=0;l<n_node;l++)
Index: /home/david/oomph-lib/trunk/config/configure.ac_scripts/user_drivers.dir_list
===================================================================
--- /home/david/oomph-lib/trunk/config/configure.ac_scripts/user_drivers.dir_list	(revision 253)
+++ /home/david/oomph-lib/trunk/config/configure.ac_scripts/user_drivers.dir_list	(working copy)
@@ -1,2 +1,15 @@
+user_drivers/david_shepherd/discontinuity_tests
+user_drivers/david_shepherd/hybrid_boundary_element
+user_drivers/david_shepherd/one_d_demag_testing
+user_drivers/david_shepherd
+user_drivers/david_shepherd/one_d_boundaries_multi_mesh
+user_drivers/david_shepherd/two_d_micromag
+user_drivers/david_shepherd/one_d_cryst_anis
+user_drivers/david_shepherd/three_d_micromag
+user_drivers/david_shepherd/one_d_exchange_testing
+user_drivers/david_shepherd/one_d_micromag
+user_drivers/david_shepherd/integration_tests/quadrature_accuracy_check
+user_drivers/david_shepherd/integration_tests/find_corresponding_knot_check
+user_drivers/david_shepherd/singular_quadrature
+user_drivers/jack_cool
 user_drivers/joe_cool
-user_drivers/jack_cool
Index: /home/david/oomph-lib/trunk/config/configure_options/current
===================================================================
--- /home/david/oomph-lib/trunk/config/configure_options/current	(revision 253)
+++ /home/david/oomph-lib/trunk/config/configure_options/current	(working copy)
@@ -1,111 +1,5 @@
-#=====================================================================
-# File that specifies options and compile/link flags for 
-# autogen.sh script: Needs to be processed with autogen-setup.sh
-# and creates the shell script autogen-configure.sh that is executed
-# by autogen.sh. 
-#
-#  NOTE: Options need to go first!
-#
-# A few options:    [type ./configure --help to see the full list] 
-# --------------
-#
-#         --enable-MPI   includes all MPI sources into the build
-#                        (you will probably have to specify
-#                        your MPI libraries and include directories
-#                        in the compiler/linker options; see the 
-#                        examples enclosed below).
-#         --enable-suppress-doc  Don't build the documentation (can take a long
-#                        and uses quite a bit of diskspace. You might
-#                        prefer to consult the online documentation at
-#                        http://www.oomph-lib.org
-#         --enable-suppress-demo Don't build the demo codes/self test  
-#
-# Common compiler/linker flags:
-# -----------------------------            
-#
-# - CXX =  C++ compiler (defaults to gcc/g++ if not specified)
-# - CC  =  C compiler (defaults to gcc if not specified)
-# - F77 =  F77 compiler (defaults to gcc/g77 if not specified)
-# 
-# - CXXFLAGS = flags for the C++ compiler. Specify optmisation flags
-#              for your compiler (e.g. -O6 for maximum optimisation
-#              with the gcc compiler suite, enable debugging (-g for
-#              the gcc compilers), etc.)
-#
-#              Here's a list of useful oomph-lib related flags:
-#              
-#              -DPARANOID enables "general paranoia", allowing the
-#                         code to perform various sanity checks
-#                         during execution. Incurs a moderate run-time
-#                         overhead.
-#              -DRANGE_CHECKING switches on bounds checking in
-#                         oomph-lib's Vector class (a wrapper to the
-#                         the STL vector class). This is VERY costly
-#                         in terms of run time but very useful for
-#                         tracking down the source of otherwise
-#                         inexcplicable segmentation faults...
-#              -DLEAK_CHECK mainly used during code developement. Used
-#                         to allow optional checks that objects are 
-#                         deleted to avoid memory leaks.
-#              -DWARN_ABOUT_SUBTLY_CHANGED_OOMPH_INTERFACES throws
-#                         an oomph-lib warning whenever a function
-#                         whose interface has been changed "subtly"
-#                         (i.e. in a way that the compiler can't detect,
-#                         e.g. a change in the order of two arguments
-#                         of the same type) during some revision is called.
-#                         Use this only (!) if your code behaves
-#                         oddly after upgrading to a newer release
-#                         of the library.
-# 
-# - CFLAGS   = flags for the C compiler. Specify optimisation flags
-#              for your compiler (e.g. -O6 for maximum optimisation
-#              with the gcc compiler suite, enable debugging (-g for
-#              the gcc compilers), etc.) The C-compiler is only used
-#              to compile certain external libraries, such as superlu.
-#              Therefore it is not necessary to specify any of 
-#              oomph-lib's own compilation flags.
-# 
-# - FFLAGS   = flags for the f77 compiler. Specify optimisation flags
-#              for your compiler (e.g. -O6 for maximum optimisation
-#              with the gcc compiler suite, enable debugging (-g for
-#              the gcc compilers), etc.) The f77-compiler is only used
-#              to compile certain external libraries, such as the
-#              frontal solver from the hsl library.
-#              Therefore it is not necessary to specify any of 
-#              oomph-lib's own compilation flags.
-#
-# - LIBS     = Specify any additional libraries that you might have
-#              to link against -- typically only required if  mpi is
-#              used. autoconf should automatically detect any 
-#              other libraries.
-#=====================================================================
-#
-# gcc-based compilation with full optimisation.
-# Library headers in the build directory are replaced by symbolic
-# links to the src directory -- this ensures that you don't
-# accidentally edit a file in the include directory only to have
-# it immediately wiped out when you re-install the library after
-# finishing your changes. We specify the location of the blas,
-# lapack, hypre and trilinos libraries, the latter two assumed
-# to have been compiled with mpi support. 
-#
-#--enable-suppress-doc
---enable-MPI
 --enable-symbolic-links-for-headers
---with-blacs=/home/mheil/local/lib/blacs_with_copy
---with-scalapack=/home/mheil/local/lib/scalapack/libscalapack.a
---with-pord=/home/mheil/local/pord/lib/libpord.a 
---with-mumps=/home/mheil/local/mumps
---with-blas=/home/mheil/local/lib/blas/blas.a
---with-lapack=/home/mheil/local/lib/lapack/lapack.a
---with-hypre=/home/mheil/local/hypre_default_installation_mpi
---with-trilinos=/home/mheil/local/trilinos_default_installation_mpi
---with-mpi-self-tests="mpirun -np 2"
-CXXFLAGS="-O6 -Wall"
-CFLAGS="-O6"
-FFLAGS="-O6"
-CXX=mpic++
-CC=mpicc
-F77=mpif77
-LD=mpif77
-
+--enable-suppress-doc
+CXXFLAGS="-g -DPARANOID -Wall -Wconversion --std=c++0x"
+CFLAGS="-g -Wall"
+FFLAGS="-g -Wall"
Index: /home/david/oomph-lib/trunk/autogen.sh
===================================================================
--- /home/david/oomph-lib/trunk/autogen.sh	(revision 253)
+++ /home/david/oomph-lib/trunk/autogen.sh	(working copy)
@@ -2,8 +2,6 @@
 
 
 
-
-
 #====================================================================
 # A few helper functions
 #====================================================================
Index: /home/david/oomph-lib/trunk/user_drivers/Makefile.am
===================================================================
--- /home/david/oomph-lib/trunk/user_drivers/Makefile.am	(revision 253)
+++ /home/david/oomph-lib/trunk/user_drivers/Makefile.am	(working copy)
@@ -11,4 +11,4 @@
 	rm -f *~
 
 doc_dirs:
-	echo $(USER_DRIVER_SUBDIRECTORIES)
\ No newline at end of file
+echo $(USER_DRIVER_SUBDIRECTORIES)
